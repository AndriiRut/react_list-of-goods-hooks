{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goods","listOfGoods","setListOfGoods","visible","setVisible","length","setLength","sortBy","setSortBy","reverse","setReverse","reverseOrNot","visibleGoods","array","selectedLength","sortType","reversed","result","filter","good","sort","a","b","toLowerCase","localeCompare","prepereMyList","className","type","onClick","name","value","onChange","event","target","map","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0JaC,EAvJO,WACpB,MAAgBC,mBAAS,GAAD,OAAKF,IAAtBG,EAAP,oBACA,EAAsCD,mBAASC,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA4BL,mBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAA4BP,mBAAS,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAA8BT,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAUIC,GAAe,EA8CbC,EAhCgB,SACpBC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAS,YAAIJ,GAAOK,QAAO,SAACC,GAAD,OAC/BA,EAAKd,QAAUS,KAEjB,OAAQC,GACN,IAAK,MACHE,EAAOG,MAAK,SAACC,EAAWC,GAAZ,OACTD,EAAEE,cAAeC,cAAcF,EAAEC,kBAEpC,MACF,IAAK,SACHN,EAAOG,MAAK,SAACC,EAAWC,GAAZ,OACVD,EAAEhB,OAASiB,EAAEjB,UAYnB,OALIW,IAAaL,IACfM,EAAOR,UACPE,GAAgBA,GAGXM,EAGYQ,CAAcxB,EAAaI,EAAQE,EAAQE,GAEhE,OACE,sBAAKiB,UAAU,oBAAf,UACE,oBAAIA,UAAU,QAAd,mBACEvB,EAUE,qCACE,sBACEuB,UAAU,2DADZ,UAME,wBACEC,KAAK,SACLD,UAAU,yCACVE,QA7DU,WACtBlB,EAAWC,IAyDD,qBAQA,wBACEgB,KAAK,SACLD,UAAU,+BACVE,QAAS,WACPpB,EAAU,QAJd,iCAUA,wBACEmB,KAAK,SACLD,UAAU,+BACVE,QAAS,WACPpB,EAAU,WAJd,4BASA,qBAAKkB,UAAU,+BAAf,SACE,yBACEG,KAAK,SACLC,MAAOzB,EACP0B,SAAU,SAAAC,GAvGH,IAACF,IAwGSE,EAAMC,OAAOH,MAvG5CxB,GAAWwB,IAmGC,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,qBAGJ,wBACEH,KAAK,SACLD,UAAU,+BACVE,QApHG,WACf1B,EAAeF,GACfM,EAAU,GACVE,EAAU,IACVE,GAAW,GACXC,GAAe,GA4GL,sBASF,6BACGC,EAAasB,KAAI,SAACf,GAAD,OAChB,oBAAeO,UAAU,YAAzB,SAAsCP,GAA7BA,WAzEf,wBACEQ,KAAK,SACLD,UAAU,kBACVE,QAhES,WACjBxB,GAAW,IA4DL,uB,MClFV+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c930ca1f.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [goods] = useState([...goodsFromServer]);\n  const [listOfGoods, setListOfGoods] = useState(goods);\n  const [visible, setVisible] = useState(false);\n  const [length, setLength] = useState(1);\n  const [sortBy, setSortBy] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const showMyList = () => {\n    setVisible(true);\n  };\n\n  const lengthSelector = (value: string) => {\n    setLength(+value);\n  };\n\n  let reverseOrNot = true;\n\n  const resetAll = () => {\n    setListOfGoods(goods);\n    setLength(1);\n    setSortBy('');\n    setReverse(false);\n    reverseOrNot = true;\n  };\n\n  const changeDirection = () => {\n    setReverse(reverseOrNot);\n  };\n\n  const prepereMyList = (\n    array: string[],\n    selectedLength: number,\n    sortType: string,\n    reversed: boolean,\n  ) => {\n    const result = [...array].filter((good: string) => (\n      good.length >= selectedLength));\n\n    switch (sortType) {\n      case 'abc':\n        result.sort((a: string, b: string) => (\n          (a.toLowerCase()).localeCompare(b.toLowerCase())\n        ));\n        break;\n      case 'length':\n        result.sort((a: string, b: string) => (\n          a.length - b.length\n        ));\n        break;\n      default:\n        break;\n    }\n\n    if (reversed === reverseOrNot) {\n      result.reverse();\n      reverseOrNot = !reverseOrNot;\n    }\n\n    return result;\n  };\n\n  const visibleGoods = prepereMyList(listOfGoods, length, sortBy, reverse);\n\n  return (\n    <div className=\"App container box\">\n      <h1 className=\"title\">Goods</h1>\n      {!visible\n        ? (\n          <button\n            type=\"button\"\n            className=\"button is-ghost\"\n            onClick={showMyList}\n          >\n            Start\n          </button>\n        ) : (\n          <>\n            <div\n              className=\"\n                is-flex-direction-row\n                is-justify-content-space-between\n              \"\n            >\n              <button\n                type=\"button\"\n                className=\"is-rounded button is-success mg-medium\"\n                onClick={changeDirection}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"is-rounded button is-success\"\n                onClick={() => {\n                  setSortBy('abc');\n                }}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"is-rounded button is-success\"\n                onClick={() => {\n                  setSortBy('length');\n                }}\n              >\n                Sort by length\n              </button>\n              <div className=\"select is-rounded is-success\">\n                <select\n                  name=\"length\"\n                  value={length}\n                  onChange={event => {\n                    lengthSelector(event.target.value);\n                  }}\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                  <option value=\"6\">6</option>\n                  <option value=\"7\">7</option>\n                  <option value=\"8\">8</option>\n                  <option value=\"9\">9</option>\n                  <option value=\"10\">10</option>\n                </select>\n              </div>\n              <button\n                type=\"button\"\n                className=\"is-rounded button is-success\"\n                onClick={resetAll}\n              >\n                Reset\n              </button>\n\n            </div>\n            <ul>\n              {visibleGoods.map((good: string) => (\n                <li key={good} className=\"is-size-3\">{good}</li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}